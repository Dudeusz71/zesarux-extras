{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;}
{\*\expandedcolortbl;;\csgray\c0;\csgray\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww21180\viewh15980\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs32 \cf2 \cb3 \CocoaLigature0 --set-breakpoint 1 "pc=2f94H" \
--set-breakpoint 2 "pc=2d2eh" \
--set-breakpoint 3 "pc=02E66H" \
--set-breakpoint 4 "pc=02E8CH" \
--set-breakpoint 5 "pc=02E6AH AND D1/0" \
--set-breakpoint 6 "pc=02d46h" \
--set-breakpoint 7 "pc=04AE4h" \
--set-breakpoint 8 "pc=04AF2h" \
--set-breakpoint 9 "pc=02E76h" \

\f1\fs24 \cf0 \cb1 \CocoaLigature1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\
Cuando salta lectura tecla, la lee desde 2f8e:\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs32 \cf2 \cb3 \CocoaLigature0 * command for 8079  - depends on value in D0\
L02F7C LSL.B   #4,D0    * send command to 8049 D0 * 16\
       ORI.B   #$08,D0  * bit 3 = 1\
L02F82 LSL.B   #1,D0\
       BEQ.S   L02F94\
       MOVEQ   #$03,D1\
       ROXL.B  #1,D1\
       ASL.B   #1,D1\
       MOVE.B  D1,(A1)\
L0\cf3 \cb2 2F8E\cf2 \cb3  BTST    D6,(A0)  * wait till bit 6 ist 0 - ackn of 8049\
       BNE.S   L0\cf3 \cb2 2F8E\cf2 \cb3 \
       BRA.S   L02F82\
L02F94 RTS\
\
\
\
\
Y esta a su vez se ha llamado de 02D26 :\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf3 \cb2 L02D20\cf2 \cb3  JSR     L02F6E(PC)    * returns D6=6  A0=$18020  A1=$18003\
    24 MOVEQ   #$01,D0       * command 1 to 8049 = respond\
    26 JSR     L02F7C(PC)    * command for 8079\
    2A JSR     L02F9A(PC)    * receive demands\
    2E MOVE.B  D1,D7         * d7: received byte\
       BTST    #$06,D7       * bit 6=0? mdv write not allo\
       SEQ     $0094(A6)     * SV.WP\
       BTST    #$01,D7       * bit 1=1 beeper activ\
       SNE     $0096(A6)     * SV.SOUND\
02D40   BTST    #$00,D7       * bit 0=0 keyboard-buff empty\
	\
		;Aqui esta el truco para que retorne tecla\'85. bit 0\
\
       BEQ.S   L02D4A\
02D46\
;sigue por aqu\'ed cuando bit 0=1\
       JSR     L02E58(PC)      * transfer keyboard buff\
\
\
\
\
L02E58 MOVEA.L $004C(A6),A2  * clear 8049 - keyboard buffer\
       MOVE.L  A2,D0\
       BEQ.S   L02EC0        * = no con open\
       MOVEQ   #$08,D0       * command 8=read keyboard\
       JSR     L02F7C(PC)    * command for 8079\
L02E66 JSR     L02F96(PC)    * receive\
\
;parece que D1 vale 0\
\
L02E6A MOVE.B  D1,D5         * d1=d5=d4 : number of bytes in buffer\
\
\
       MOVE.B  D1,D4\
       ANDI.W  #$0007,D4\
       BEQ.S   L02E96    * if empty - out\
L02E74h  SUBQ.W  #1,D4\
L02E76 CLR.W   $008A(A6)    * autorepeat buffer\
       JSR     L02F96(PC)    * receive ctrl alt shift\
       MOVE.B  D1,D2\
       JSR     L02F9A(PC)\
       MOVEA.L $BFF2,A3\
02E8A  JSR     (A3)      * convert to ASCII \
L02E8C BRA.S   L02EC4    * ctrl - space\
       BRA.S   L02EC2    * no char implemented !!! change to 2ec0 !!!\
       BSR.S   L02EEC\
       DBF     D4,L02E76 * look for next bytes in buffer\
\
\
\
\
\
Ese JSR (A3) aparentemente salta a:\
0B35A cmpi.b  #$36, D1\
0B35E bne     b368\
0B360 btst    #$1, D2\
0B364 beq     b368\
0B366 rts\
0B368 movem.l D3-D5/A3, -(A7)                     |L0B368 movem.l D3/D4/D5/A3,-(A7)\
0B36C lea     $b458.l, A3                         |       LEA      L0B458,A3            * keyboard - table\
0B372 move.w  ($8,A3), D4                         |       MOVE.W   $8(A3),D4\
0B376 lea     (A3,D4.w), A3                       |       LEA.L    $0(A3,D4.W),A3\
0B37A moveq   #$4, D4                             |       MOVEQ    #$4,D4\
0B37C cmp.b   (A3)+, D1                           |L0B37C CMP.B    (A3)+,D1\
0B37E beq     b388                                |       BEQ.S    L0B388\
0B380 addq.l  #1, A3                              |       ADDQ.L   #1,A3\
0B382 dbra    D4, b37c                            |       DBF      D4,L0B37C\
0B386 bra     b392                                |       BRA.S    L0B392\
0B388 move.b  (A3), D1                            |L0B388 MOVE.B   (A3),D1\
0B38A or.b    D2, D1                              |       OR.B     D2,D1\
0B38C jmp     $b450.l                             |       JMP      L0B450\
0B392 clr.w   D5                                  |L0B392 CLR.W    D5\
\
\
\
}